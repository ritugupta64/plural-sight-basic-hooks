{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ritgupta5\\\\pov\\\\plural-sight-basic-hooks\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\n\nfunction HomePage() {\n  const {\n    0: inputState,\n    1: setInputState\n  } = useState({\n    firstName: '',\n    lastName: ''\n  });\n\n  const updateVal = e => {\n    setInputState(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 8\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    onChange: updateVal,\n    value: inputState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 8\n    }\n  }), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"First Name:\", inputState)), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 8\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    onChange: updateVal,\n    value: inputState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 8\n    }\n  }), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Last Name:\", inputState)));\n}\n\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/ritgupta5/pov/plural-sight-basic-hooks/pages/index.js"],"names":["React","useState","HomePage","inputState","setInputState","firstName","lastName","updateVal","e","prevState","target","name","value"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,QAAT,GAAoB;AAClB,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BH,QAAQ,CAAC;AAC3CI,IAAAA,SAAS,EAAC,EADiC;AAE3CC,IAAAA,QAAQ,EAAC;AAFkC,GAAD,CAA5C;;AAKA,QAAMC,SAAS,GAAIC,CAAD,IAAO;AACvBJ,IAAAA,aAAa,CAACK,SAAS,oCAClBA,SADkB;AAErB,OAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAgBH,CAAC,CAACE,MAAF,CAASE;AAFJ,MAAV,CAAb;AAID,GALD;;AAMA,SAAO,4BAGF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAO,IAAA,IAAI,EAAC,MAAZ;AACC,IAAA,QAAQ,EAAEL,SADX;AACsB,IAAA,KAAK,EAAEJ,UAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkBA,UAAlB,CAHD,CAHE,EAQF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAO,IAAA,IAAI,EAAC,MAAZ;AACC,IAAA,QAAQ,EAAEI,SADX;AACuB,IAAA,KAAK,EAAEJ,UAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAiBA,UAAjB,CAHD,CARE,CAAP;AAcD;;AAED,eAAeD,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction HomePage() {\r\n  const [inputState, setInputState] = useState({\r\n    firstName:'',\r\n    lastName:''\r\n  })\r\n\r\n  const updateVal = (e) => {\r\n    setInputState(prevState => ({\r\n      ...prevState,\r\n      [e.target.name]:e.target.value\r\n    }))\r\n  }\r\n  return <>\r\n  {/* <input type=\"text\"\r\n        onChange={(e) => setInputState(e.target.value)} /> */}\r\n       <div>\r\n       <input type=\"text\"\r\n        onChange={updateVal} value={inputState} />\r\n        <span>First Name:{inputState}</span>\r\n       </div>\r\n       <div>\r\n       <input type=\"text\"\r\n        onChange={updateVal}  value={inputState} />\r\n        <span>Last Name:{inputState}</span>\r\n       </div>\r\n  </>;\r\n}\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}